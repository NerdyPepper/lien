#!/bin/bash


# Lien
# Dead simple file upload program
# - Upload to a file host
# - Shorten links
# - Log your uploads
# - Clear your logs
# - Repeat

red="\e[31m"
grn="\e[32m"
ylw="\e[33m"
cyn="\e[36m"
blu="\e[34m"
prp="\e[35m"
bprp="\e[35;1m"
rst="\e[0m"

####### Configuration ########

# path to save screenshots and logs
save_dir="$HOME/pics/scrots"

# application to open when lien is called
# with the -e tag
editor_app="gimp"

##############################

method=0
hosts=0
delay=0
edit=0
doUpload=0

print_help() {
	echo "Usage:"
	echo "lien [options]"

	echo "-h                  Display this help message and exit."
	echo "-f [file]           Upload a file to a file host."
	echo "Auto uploads a screenshot when paired with the 's' flag"
	echo "-s [file]           Take an interactive screenshot."
	echo "-a [file]           Take a full screenshot."
	echo "-d <num>            Wait for <num> seconds before taking a screenshot."
	echo "-l                  Print logs of previous uploads. Logs are stored at $HOME/lien/lien_logs."
	echo "-c                  Clear all logs."

	echo "Examples:"

	echo "lien -f xyz.txt # upload a text file"
	echo "lien -af -d 2   # upload a screenshot of the entire root window"
	echo "                # after a delay of 2 seconds"
}

copy() {
	echo $1 | xclip -i
	echo $1 | xclip -selection clipboard
}

screenshot() {
	case $1 in 
		1)
			read -r X Y W H < <(slop -f "%x %y %w %h" -b 4 -c 0.8,0.8,0.8,0.8 -t 0 )
			g=${W}x${H}+${X}+${Y}
            sleep "$2"
			maim -g "$g" "$fname"
			;;
		2)
			maim -d "$2" "$fname"
			;;
        3)
            sleep "$2"
            maim -i $(xdotool getactivewindow) input.png
            convert input.png \( +clone -background black -shadow 60x60+0+0 \) +swap -background white -layers merge +repage "$fname"
            rm input.png
	esac
}

upload() {
	local id=$( curl -sf -F "file=@${1}" https://0x0.st )
	if [[ -z "${id// }" ]]
	then
		echo -e "${red}Error $rst"
		notify-send "Failed to upload ${1}"
		exit 1
	else
		echo "${id}"
		echo "${fname} - ${id}" >> $save_dir/lien_logs
		notify-send "Uploaded successfully"
		copy $id
	fi
}

shorten() {
	local id=$( curl -sF"shorten=${1}" https://0x0.st )
	echo ${id}
	echo "${1} - ${id}" >> $save_dir/lien_logs
	copy $id
}

print_logs() {
	if [ ! -f $save_dir/lien_logs ]
	then
		echo -e "${red}No logs${rst}"
	else
		tac $save_dir/lien_logs
	fi
}

clear_logs() {
	if [ ! -f $save_dir/lien_logs ]
	then
		echo -e "${red}No logs${rst}"
	else
		rm -f $save_dir/lien_logs
		echo "Logs cleared."
	fi
}

while getopts :hlsaufcd:o: options
do
	case $options in
		s) method=1 ;;
		a) method=2 ;;
		u) method=3 ;;
		f) doUpload=1 ;;
		d) delay="$OPTARG" ;;
		l)
			print_logs
			exit 0
			;;
		o)
			shorten "${OPTARG}"
			exit 0
			;;
		c)
			clear_logs
			exit 0
			;;
		h|?)
			print_help
			exit 0
			;;
		*)
			print_help
			exit 0
			;;
	esac
done

shift $(( $OPTIND -1 ))

# Process the remaining args
if [ $# -gt 1 ]
then
	echo "Too many arguments."
	echo "Try lien -h for help."
	exit 0
elif [ $# -lt 0 ]
then
	echo "Too few arguments."
	echo "Try lien -h for help."
	exit 0
elif [ $# -eq 0 ]
then
	fname=$( date +"%T-%d.%m.%y" )
	fname="$fname.png"
else
	fname=$1
fi


main() {
	case $doUpload in
		1)
			case $method in
				0)
					upload $fname
					;;
				*)
					screenshot $method $delay
					upload $fname
					rm $fname
					;;
			esac
			;;
		0)
			case $method in
				1|2|3)
					screenshot $method $delay
					mv $fname $save_dir/$fname
					;;
			esac
			;;
	esac
}

main

# exit if none of the others
# options end the program
exit 1
